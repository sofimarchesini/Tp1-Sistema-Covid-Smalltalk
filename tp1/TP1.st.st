Object subclass: #AlgoVid	instanceVariableNames: 'personas burbujas colegios'	classVariableNames: ''	package: 'tp1-105994-clases'!!AlgoVid methodsFor: 'initialization' stamp: 's 5/11/2021 22:32'!initialize 	personas := OrderedCollection new.	burbujas := OrderedCollection new.	colegios := OrderedCollection new.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'sofi 5/17/2021 14:34'!contactoEstrechoEntre: primerpersona y: segundapersona	(self buscarObjeto: primerpersona En: personas) agregarContacto: (self buscarObjeto: segundapersona En: personas).	(self buscarObjeto: segundapersona En: personas) agregarContacto: (self buscarObjeto: primerpersona En: personas) .! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'sofi 5/16/2021 20:46'!diagnosticoDe: unNombrePersona 	^(self buscarObjeto: unNombrePersona En: personas) obtenerDiagnostico.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'sofi 5/17/2021 15:11'!buscarObjeto: unNombre En: coleccion   |ObjetoBuscado|	ObjetoBuscado := coleccion  detect: [ :x | (x nombreDevolver) = unNombre] ifNone: [ NoExisteElNombreError signal].	^ObjetoBuscado.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'sofi 5/16/2021 20:46'!esPersonalEsencial: nombrePersona	(self buscarObjeto: nombrePersona En: personas) agregarPersonaEsencial .	! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'sofi 5/16/2021 20:44'!burbujaPinchada: nombreBurbuja	^(self buscarObjeto: nombreBurbuja En: burbujas) estaPinchada.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'sofi 5/16/2021 20:45'!clasesPresencialesEn: nombreColegio	^(self buscarObjeto: nombreColegio En: colegios) clasesSonPresenciales.	! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 16:42'!puedeCircular: unNombrePersona	^((self buscarObjeto: unNombrePersona En: personas) estadoCirculacionDevolver).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'sofi 5/16/2021 20:44'!agregarA: nombreBurbuja alColegio: nombreColegio	(self buscarObjeto: nombreColegio En: colegios) agregarBurbuja: (self buscarObjeto: nombreBurbuja En: burbujas).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 18:37'!nuevoColegio: nombreColegio	|nuevoColegio|	(nombreColegio isNumber ) ifTrue: [ ParametrosInvalidosError signal ].	nuevoColegio := Colegio new.	nuevoColegio nombrar: nombreColegio .	colegios detect: [:x|(x nombreDevolver) = nombreColegio ] ifFound: [ NombresRepetidosError signal].	colegios add: nuevoColegio.	! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'sofi 5/16/2021 21:52'!estaVacunadx: unNombrePersona 	(self buscarObjeto: unNombrePersona En: personas) vacunar.		! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 18:36'!agregarA: nombrePersona aLaBurbuja: nombreBurbuja	(self buscarObjeto: nombreBurbuja En: burbujas) agregarPersona: (self buscarObjeto: nombrePersona En: personas).! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 15:49'!agregarSintoma: unSintoma a: unNombrePersona     (unSintoma  = '') ifTrue: [ NombreVacioError signal ].	(self buscarObjeto: unNombrePersona En: personas) agregarSintoma: unSintoma.	! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 'sofi 5/16/2021 20:46'!esPersonaDeRiesgo: nombrePersona	(self buscarObjeto: nombrePersona En: personas) agregarPersonaDeRiesgo.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 18:37'!nuevaPersona: unNombrePersona	|unaPersona|	(unNombrePersona  isNumber ) ifTrue: [ ParametrosInvalidosError signal ].	unaPersona := Persona new.	unaPersona asignarNombre: unNombrePersona.	personas detect: [:x|(x nombreDevolver) = unNombrePersona ] ifFound: [ NombresRepetidosError signal].	personas add: unaPersona.! !!AlgoVid methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 18:36'!nuevaBurbuja: nombreBurbuja   |burbujaNueva|	(nombreBurbuja isNumber ) ifTrue: [ ParametrosInvalidosError signal ].	burbujaNueva := Burbuja new.	burbujaNueva nombrar: nombreBurbuja.	burbujas detect: [:x|(x nombreDevolver) = nombreBurbuja ] ifFound: [ NombresRepetidosError signal].	burbujas add: burbujaNueva 	! !Object subclass: #Burbuja	instanceVariableNames: 'nombre personas estadoBurbuja'	classVariableNames: ''	package: 'tp1-105994-clases'!!Burbuja methodsFor: 'accessing' stamp: 'sofi 5/17/2021 15:11'!nombreDevolver	^nombre.! !!Burbuja methodsFor: 'initialization' stamp: 's 5/11/2021 22:29'!initialize 		personas := OrderedCollection new.	estadoBurbuja := BurbujaNoPinchada new.! !!Burbuja methodsFor: 'as yet unclassified' stamp: 'sofi 5/17/2021 20:02'!estaPinchada	^estadoBurbuja estoyPinchada . ! !!Burbuja methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 16:42'!pincharBurbuja	estadoBurbuja := BurbujaPinchada new.	estadoBurbuja puedeCircular: personas.! !!Burbuja methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 16:20'!nombrar: nombreBurbuja 	(nombreBurbuja = '') ifTrue: [ NombreVacioError signal ].	nombre := nombreBurbuja .! !!Burbuja methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 15:58'!agregarPersona: objetoPersona	personas detect: [:x|(x nombreDevolver) = (objetoPersona nombreDevolver) ] ifFound: [ NombresRepetidosError signal].	personas add: objetoPersona.	objetoPersona agregarBurbuja: self.! !Object subclass: #Colegio	instanceVariableNames: 'nombre burbujas presencialidad'	classVariableNames: ''	package: 'tp1-105994-clases'!!Colegio methodsFor: 'initialization' stamp: 's 5/12/2021 20:47'!initialize 		burbujas := OrderedCollection new.	presencialidad := ClasesPresenciales new.! !!Colegio methodsFor: 'accessing' stamp: 'sofi 5/17/2021 15:11'!nombreDevolver	^nombre.! !!Colegio methodsFor: 'as yet unclassified' stamp: 'sofi 5/17/2021 15:05'!modificarANoPresencial	presencialidad := ClasesNoPresenciales new.! !!Colegio methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 16:23'!agregarBurbuja: objetoBurbuja	burbujas detect: [:x|(x nombreDevolver) = (objetoBurbuja nombreDevolver) ] ifFound: [ NombresRepetidosError signal].	burbujas add: objetoBurbuja.! !!Colegio methodsFor: 'as yet unclassified' stamp: 'sofi 5/17/2021 15:10'!clasesSonPresenciales	presencialidad calcularPresencialidad: self.	^presencialidad sonPresenciales.! !!Colegio methodsFor: 'as yet unclassified' stamp: 's 5/11/2021 22:35'!nombrar: nombreNuevo	nombre:= nombreNuevo .! !!Colegio methodsFor: 'as yet unclassified' stamp: 'gf 5/20/2021 16:22'!devolverBurbujas	^burbujas.! !Object subclass: #Diagnostico	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105994-clases'!!Diagnostico methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 11:24'!verificarSintomas: sintomas De: unaSalud! !!Diagnostico methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 11:24'!actualizarSegunEstado: unaBurbuja! !!Diagnostico methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 11:24'!cambiarEstadoSegunVacuna: objetoPersona.! !!Diagnostico methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 16:42'!puedeCircular: objetoPersona! !!Diagnostico methodsFor: 'accessing' stamp: 's 5/19/2021 11:24'!nombreDevolver! !Object subclass: #EstadoBurbuja	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105994-clases'!!EstadoBurbuja methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 16:42'!puedeCircular: objetoPersona! !!EstadoBurbuja methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 12:29'!estoyPinchada! !!EstadoBurbuja methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 12:29'!pincharBurbuja! !EstadoBurbuja subclass: #BurbujaNoPinchada	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105994-clases'!!BurbujaNoPinchada methodsFor: 'as yet unclassified' stamp: 's 5/11/2021 22:30'!estoyPinchada	^false.! !EstadoBurbuja subclass: #BurbujaPinchada	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105994-clases'!!BurbujaPinchada methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 16:42'!puedeCircular: personas	personas do: [:x   | x puedeNoCircular ].! !!BurbujaPinchada methodsFor: 'as yet unclassified' stamp: 's 5/11/2021 22:31'!estoyPinchada 	^true.! !Object subclass: #EstadoCirculacion	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105994-clases'!!EstadoCirculacion methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 12:30'!puedeCircular ! !Object subclass: #EstadoDeRiesgo	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105994-clases'!!EstadoDeRiesgo methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 16:42'!puedeCircular: objetoPersona ! !Object subclass: #EstadoPresencialidad	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105994-clases'!!EstadoPresencialidad methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 12:30'!calcularPresencialidad: colegio ! !!EstadoPresencialidad methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 12:30'!sonPresenciales! !EstadoPresencialidad subclass: #ClasesNoPresenciales	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105994-clases'!!ClasesNoPresenciales methodsFor: 'as yet unclassified' stamp: 's 5/12/2021 20:45'!sonPresenciales	^false.! !EstadoPresencialidad subclass: #ClasesPresenciales	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105994-clases'!!ClasesPresenciales methodsFor: 'as yet unclassified' stamp: 'gf 5/20/2021 16:23'!calcularPresencialidad: colegio	|burbujas|	burbujas := colegio devolverBurbujas .	(burbujas isEmpty) ifTrue: [ ColeccionVaciaError signal  ].	(((burbujas count: [:x|x estaPinchada ])/burbujas size) > 0.4) ifTrue: [colegio modificarANoPresencial ].! !!ClasesPresenciales methodsFor: 'as yet unclassified' stamp: 's 5/12/2021 20:44'!sonPresenciales	^true.! !Object subclass: #Persona	instanceVariableNames: 'nombre estadoCirculacion estadoDeRiesgo diagnostico sintomas burbuja'	classVariableNames: ''	package: 'tp1-105994-clases'!!Persona methodsFor: 'initialization' stamp: 's 5/19/2021 14:57'!initialize 	estadoCirculacion := PersonaNoCircula new.	sintomas := OrderedCollection new.	estadoDeRiesgo := PersonaNoDeRiesgo new. 	burbuja := Burbuja new.	diagnostico := PersonaSaludable  new.! !!Persona methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/10/2021 17:26'!estadoCirculacionDevolver	^estadoCirculacion puedeCircular.! !!Persona methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 12:11'!obtenerObjetoDiagnostico	^diagnostico.! !!Persona methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 11:39'!vacunar	diagnostico cambiarEstadoSegunVacuna: self.! !!Persona methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 11:34'!cambiarASospechoso 	diagnostico := PersonaSospechosa new.! !!Persona methodsFor: 'as yet unclassified' stamp: 'sofi 5/17/2021 15:11'!nombreDevolver	^nombre.! !!Persona methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 11:38'!obtenerDiagnostico	^diagnostico nombreDevolver  .! !!Persona methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/10/2021 16:34'!asignarNombre: unNombrePersona  	nombre:= unNombrePersona.! !!Persona methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 16:42'!agregarContacto: unaPersona	(unaPersona obtenerObjetoDiagnostico ) puedeCircular: self.	! !!Persona methodsFor: 'as yet unclassified' stamp: 's 5/15/2021 23:03'!estadoDeRiesgoDevolver	^estadoDeRiesgo .! !!Persona methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 15:47'!agregarSintoma: nombreSintoma	|sintomanuevo|   self puedeNoCircular .	sintomanuevo := Sintoma new.	sintomanuevo nombrar: nombreSintoma .	sintomas detect: [:x|(x devolverNombre ) = nombreSintoma ] ifFound: [ NombresRepetidosError signal].	sintomas add: sintomanuevo .	diagnostico verificarSintomas: sintomas De: self.	diagnostico actualizarSegunEstado: burbuja.! !!Persona methodsFor: 'as yet unclassified' stamp: 'sofi 5/18/2021 12:16'!puedeNoCircular	estadoCirculacion := PersonaNoCircula  new.! !!Persona methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 14:58'!agregarBurbuja: objetoBurbuja	burbuja := objetoBurbuja .! !!Persona methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 11:35'!cambiarAPositivo 	diagnostico := PersonaPositiva new.! !!Persona methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 16:42'!agregarPersonaDeRiesgo	estadoDeRiesgo := PersonaDeRiesgo new.	estadoDeRiesgo puedeCircular: self.! !!Persona methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 16:42'!agregarPersonaEsencial   estadoDeRiesgo puedeCircular: self.	diagnostico puedeCircular: self.! !!Persona methodsFor: 'as yet unclassified' stamp: 'sofi 5/18/2021 12:15'!puedeCircular	estadoCirculacion := PersonaCircula  new.! !EstadoCirculacion subclass: #PersonaCircula	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105994-clases'!!PersonaCircula methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/10/2021 17:34'!puedeCircular 	^true.! !EstadoDeRiesgo subclass: #PersonaDeRiesgo	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105994-clases'!!PersonaDeRiesgo methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 16:42'!puedeCircular: objetoPersona	objetoPersona puedeNoCircular .! !EstadoCirculacion subclass: #PersonaNoCircula	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105994-clases'!!PersonaNoCircula methodsFor: 'as yet unclassified' stamp: 'LuciaLiceri 5/10/2021 17:26'!puedeCircular	^false.! !EstadoDeRiesgo subclass: #PersonaNoDeRiesgo	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105994-clases'!!PersonaNoDeRiesgo methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 16:42'!puedeCircular: objetoPersona 	 objetoPersona puedeCircular .! !Diagnostico subclass: #PersonaPositiva	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105994-clases'!!PersonaPositiva methodsFor: 'as yet unclassified' stamp: 'sofi 5/18/2021 12:25'!actualizarSegunEstado: unaBurbuja	unaBurbuja pincharBurbuja.		! !!PersonaPositiva methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 16:42'!puedeCircular: objetoPersona	objetoPersona puedeNoCircular .! !!PersonaPositiva methodsFor: 'accessing' stamp: 'sofi 5/17/2021 15:11'!nombreDevolver	^'Positivo'.! !Diagnostico subclass: #PersonaSaludable	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105994-clases'!!PersonaSaludable methodsFor: 'accessing' stamp: 'sofi 5/17/2021 15:11'!nombreDevolver	^'Saludable'.! !!PersonaSaludable methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 11:34'!verificarSintomas: sintomas De: persona	(sintomas size ~= 0) ifTrue: [ persona cambiarASospechoso].! !!PersonaSaludable methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 16:42'!cambiarEstadoSegunVacuna: objetoPersona	(objetoPersona estadoDeRiesgoDevolver ) puedeCircular: objetoPersona .	! !Diagnostico subclass: #PersonaSospechosa	instanceVariableNames: ''	classVariableNames: ''	package: 'tp1-105994-clases'!!PersonaSospechosa methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 11:34'!verificarSintomas: sintomas De: persona	(sintomas size = 3) ifTrue: [ sintomas detect: [ :x| (x esHabitual)] ifFound: [persona cambiarAPositivo]]. 	((sintomas size >= 4)) ifTrue: [persona cambiarAPositivo].! !!PersonaSospechosa methodsFor: 'as yet unclassified' stamp: 's 5/19/2021 16:42'!puedeCircular: objetoPersona	objetoPersona puedeNoCircular .! !!PersonaSospechosa methodsFor: 'accessing' stamp: 'sofi 5/17/2021 15:11'!nombreDevolver	^'Sospechoso'.! !Object subclass: #Sintoma	instanceVariableNames: 'nombre habituales'	classVariableNames: ''	package: 'tp1-105994-clases'!!Sintoma methodsFor: 'as yet unclassified' stamp: 's 5/14/2021 12:39'!esHabitual	^(habituales includes: (self devolverNombre)). ! !!Sintoma methodsFor: 'as yet unclassified' stamp: 's 5/10/2021 19:46'!nombrar: nombrenuevo	nombre:= nombrenuevo.! !!Sintoma methodsFor: 'as yet unclassified' stamp: 's 5/10/2021 20:07'!devolverNombre	^nombre.! !!Sintoma methodsFor: 'initialization' stamp: 's 5/14/2021 12:39'!initialize    habituales := OrderedCollection new.    habituales add: 'Fiebre'; add: 'Tos'; add: 'Cansancio'.! !